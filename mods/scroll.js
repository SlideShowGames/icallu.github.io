//This example Mod generates 'scrolls', through the command ".makescroll content_here".
//It needs creative mode.
//New lines can be generated by using the | character.
ModAPI.require("network"); //Require the network, we need to send creative inventory change packets (to ensure the item generates server side aswell)
ModAPI.require("player"); //Require the player, we need to know whether or not they're in creative mode.
ModAPI.addEventListener("sendchatmessage", function (event) { //When the player tries to send a chat message
  var targetLength = ".makescroll".length; //Target length variable, because we only want to check commands longer than this.
  var message = event.message.toString().trim(); //Message variable, which is a trimmed version of the original command (extra spaces on start and end chopped off)
  if ( //If
    message.length > targetLength && //The length of the message is longer than the target length
    message.substring(0, targetLength).trim().toLowerCase() === ".makescroll" //And, the content from character 0 (first) to that of the length, trimmed and put to lowercase is ".makescroll"
  ) {
    event.preventDefault = true; //Stop minecraft from sending the chat message
    if (!ModAPI.player.capabilities.isCreativeMode) { //Check if player is in creative mode
      ModAPI.displayToChat({ 
        msg: "To use .makeScroll you need to be in creative mode.", //Tell the user they need to be in creative mode
      });
      return; //Exit
    }
    var scrollContent = message.substring(targetLength+1); //Check the actual content of the scroll (ie: skip the ".makescroll " bit)
    var stack = ModAPI.constructors.ItemStack({ //Construct an ItemStack consisting of 1 piece of paper
      itemId: ModAPI.items.paper.getID(),
      amount: 1,
      itemDamage: 0,
    });
    stack.setDisplayName({ displayName: "Scroll" }); //Set the name of the paper to "Scroll"
    stack.setLore({ lore: scrollContent.split("|") }); //Set the lore of the scroll, to the content, making a new line at every | character.
    ModAPI.network.sendPacketCreativeInventoryAction({ //Send the packet to the server, telling it to at slot ___, place an ItemStack
      slotId: 17, //Top-right corner of inventory
      stackRef: stack.getRef(), //Java object reference to the ItemStack
    });
  }
});
